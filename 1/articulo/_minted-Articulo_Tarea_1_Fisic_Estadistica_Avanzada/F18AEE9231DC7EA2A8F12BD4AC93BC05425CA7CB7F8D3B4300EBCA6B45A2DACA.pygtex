\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{\PYGZsh{} \PYGZhy{}*\PYGZhy{} coding: utf\PYGZhy{}8 \PYGZhy{}*\PYGZhy{}}
\PYG{k+kn}{from} \PYG{n+nn}{\PYGZus{}\PYGZus{}future\PYGZus{}\PYGZus{}} \PYG{k+kn}{import} \PYG{n}{division}
\PYG{k+kn}{import} \PYG{n+nn}{numpy} \PYG{k+kn}{as} \PYG{n+nn}{np}
\PYG{k+kn}{import} \PYG{n+nn}{matplotlib.pyplot} \PYG{k+kn}{as} \PYG{n+nn}{plt}
\PYG{k+kn}{from} \PYG{n+nn}{time} \PYG{k+kn}{import} \PYG{n}{time}

\PYG{k}{def} \PYG{n+nf}{QHO\PYGZus{}ground}\PYG{p}{(}\PYG{n}{x}\PYG{p}{):}
    \PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{    Uso: devuelve amplitud de probabilidad del estado base del Oscilador Armónico cuántico}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{k}{return} \PYG{n}{np}\PYG{o}{.}\PYG{n}{pi}\PYG{o}{**}\PYG{p}{(}\PYG{o}{\PYGZhy{}}\PYG{l+m+mf}{0.25}\PYG{p}{)}\PYG{o}{*}\PYG{n}{np}\PYG{o}{.}\PYG{n}{exp}\PYG{p}{(}\PYG{o}{\PYGZhy{}}\PYG{n}{x}\PYG{o}{**}\PYG{l+m+mi}{2}\PYG{o}{/}\PYG{l+m+mf}{2.}\PYG{p}{)}

\PYG{k}{def} \PYG{n+nf}{metropolis}\PYG{p}{(}\PYG{n}{N}\PYG{o}{=}\PYG{n+nb}{int}\PYG{p}{(}\PYG{l+m+mf}{1e6}\PYG{p}{),}\PYG{n}{x0}\PYG{o}{=}\PYG{l+m+mf}{0.0}\PYG{p}{,}\PYG{n}{delta}\PYG{o}{=}\PYG{l+m+mf}{0.5}\PYG{p}{,}\PYG{n}{prob\PYGZus{}amplitude\PYGZus{}sampling}\PYG{o}{=}\PYG{n}{QHO\PYGZus{}ground}\PYG{p}{):}
    \PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{    Uso: devuelve x\PYGZus{}hist lista con N valores de x muestreados de la densidad de probabilidad}
\PYG{l+s+sd}{    (definida por la amplitud de probabilidad prob\PYGZus{}amplitude\PYGZus{}sampling) por el algoritmo}
\PYG{l+s+sd}{    Metrópolis.}

\PYG{l+s+sd}{    N: int                          \PYGZhy{}\PYGZgt{}  número de iteraciones para el algoritmo Metrópolis. }
\PYG{l+s+sd}{    x0: float                       \PYGZhy{}\PYGZgt{}  valor de x con el que el algoritmo inicia el muestreo.}
\PYG{l+s+sd}{    delta: float                    \PYGZhy{}\PYGZgt{}  tamaño máximo del paso en cada iteración de \PYGZdq{}camino}
\PYG{l+s+sd}{                                        aleatorio\PYGZdq{} }
\PYG{l+s+sd}{                                        usado por la cadena de Markov.}
\PYG{l+s+sd}{    prob\PYGZus{}amplitude\PYGZus{}sampling: func   \PYGZhy{}\PYGZgt{}  función de densidad de probabilidad a muestrear}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{c+c1}{\PYGZsh{} Iniciamos lista que almacena valores de posiciones escogidos por el algoritmo}
    \PYG{n}{x\PYGZus{}hist} \PYG{o}{=} \PYG{p}{[}\PYG{n}{x0}\PYG{p}{]}
    \PYG{n}{N} \PYG{o}{=} \PYG{n+nb}{int}\PYG{p}{(}\PYG{n}{N}\PYG{p}{)}
    \PYG{k}{for} \PYG{n}{k} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{n}{N}\PYG{p}{):}
        \PYG{c+c1}{\PYGZsh{} Proponemos nueva posición para x con distribución uniforme centrada en valor anterior}
        \PYG{n}{xnew} \PYG{o}{=} \PYG{n}{x\PYGZus{}hist}\PYG{p}{[}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{]} \PYG{o}{+} \PYG{n}{np}\PYG{o}{.}\PYG{n}{random}\PYG{o}{.}\PYG{n}{uniform}\PYG{p}{(}\PYG{o}{\PYGZhy{}}\PYG{n}{delta}\PYG{p}{,}\PYG{n}{delta}\PYG{p}{)}
        \PYG{c+c1}{\PYGZsh{} Calculamos probabilidad de aceptancia del algoritmo Metrópolis}
        \PYG{n}{acceptance\PYGZus{}prob} \PYG{o}{=} \PYG{n+nb}{min}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{,(}\PYG{n}{np}\PYG{o}{.}\PYG{n}{abs}\PYG{p}{(}\PYG{n}{prob\PYGZus{}amplitude\PYGZus{}sampling}\PYG{p}{(}\PYG{n}{xnew}\PYG{p}{)}\PYG{o}{/}\PYG{n}{prob\PYGZus{}amplitude\PYGZus{}sampling}\PYG{p}{(}\PYG{n}{x\PYGZus{}hist}\PYG{p}{[}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{])))}\PYG{o}{**}\PYG{l+m+mi}{2}\PYG{p}{)}
        \PYG{c+c1}{\PYGZsh{} Escogemos si aceptamos o no el valor de x propuesto}
        \PYG{k}{if} \PYG{n}{np}\PYG{o}{.}\PYG{n}{random}\PYG{o}{.}\PYG{n}{uniform}\PYG{p}{()} \PYG{o}{\PYGZlt{}} \PYG{n}{acceptance\PYGZus{}prob}\PYG{p}{:}
            \PYG{n}{x\PYGZus{}hist}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n}{xnew}\PYG{p}{)}
        \PYG{k}{else}\PYG{p}{:}
            \PYG{n}{x\PYGZus{}hist}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n}{x\PYGZus{}hist}\PYG{p}{[}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{])}
    \PYG{k}{return} \PYG{n}{x\PYGZus{}hist}

\PYG{k}{def} \PYG{n+nf}{run\PYGZus{}metropolis}\PYG{p}{(}\PYG{n}{N}\PYG{o}{=}\PYG{l+m+mf}{1e5}\PYG{p}{,} \PYG{n}{x0}\PYG{o}{=}\PYG{l+m+mf}{0.0}\PYG{p}{,} \PYG{n}{delta\PYGZus{}x}\PYG{o}{=}\PYG{l+m+mf}{0.5}\PYG{p}{,} \PYG{n}{prob\PYGZus{}amplitude\PYGZus{}sampling}\PYG{o}{=}\PYG{n}{QHO\PYGZus{}ground}\PYG{p}{,} 
                    \PYG{n}{plot}\PYG{o}{=}\PYG{n+nb+bp}{True}\PYG{p}{,} \PYG{n}{showplot}\PYG{o}{=}\PYG{n+nb+bp}{True}\PYG{p}{,} \PYG{n}{savefig}\PYG{o}{=}\PYG{p}{[}\PYG{n+nb+bp}{True}\PYG{p}{,}\PYG{l+s+s1}{\PYGZsq{}plot\PYGZus{}QHO\PYGZus{}ground\PYGZus{}state.eps\PYGZsq{}}\PYG{p}{],}
                    \PYG{n}{xlim} \PYG{o}{=} \PYG{l+m+mf}{3.5}\PYG{p}{,} \PYG{n}{N\PYGZus{}plot} \PYG{o}{=} \PYG{l+m+mi}{201}\PYG{p}{):}
    \PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{    Uso: corre el algoritmo Metrópolis que muestrea valores de x de la densidad de  }
\PYG{l+s+sd}{    probabilidad definida por la amplitud de probabilidad prob\PYGZus{}amplitude\PYGZus{}sampling y}
\PYG{l+s+sd}{    grafica el histograma que resulta del algoritmo metrópolis, contrastado con la }
\PYG{l+s+sd}{    densidad de probabilidad teórica.}
\PYG{l+s+sd}{    }
\PYG{l+s+sd}{    Recibe:}
\PYG{l+s+sd}{        N: int                  \PYGZhy{}\PYGZgt{} Número de iteraciones para el algoritmo Metrópolis}
\PYG{l+s+sd}{        x0: float               \PYGZhy{}\PYGZgt{} valor de x con el que el algoritmo inicia el muestreo.}
\PYG{l+s+sd}{        delta: float            \PYGZhy{}\PYGZgt{} tamaño máximo del paso en cada iteración de \PYGZdq{}camino }
\PYG{l+s+sd}{                                   aleatorio\PYGZdq{} }
\PYG{l+s+sd}{        prob\PYGZus{}amplitude\PYGZus{}sampling \PYGZhy{}\PYGZgt{}  Función de densidad de probabilidad a muestrear por el }
\PYG{l+s+sd}{                                    algoritmo.}
\PYG{l+s+sd}{        showplot = True / False \PYGZhy{}\PYGZgt{} Elige si muestra o no la gráfica.}
\PYG{l+s+sd}{        savefig = [True / False, \PYGZsq{}name of fig\PYGZsq{}] \PYGZhy{}\PYGZgt{}  Elige si guarda o no la gráfica. }
\PYG{l+s+sd}{                                                    Nombre del archivo \PYGZsq{}name of fig\PYGZsq{}}
\PYG{l+s+sd}{        x\PYGZus{}lim: float            \PYGZhy{}\PYGZgt{}  límite en x para la gráfica}
\PYG{l+s+sd}{        N\PYGZus{}plot: list            \PYGZhy{}\PYGZgt{}  número de valores de x para los que se grafica densidad }
\PYG{l+s+sd}{                                    de probabilidad}
\PYG{l+s+sd}{    }
\PYG{l+s+sd}{    Devuelve:}
\PYG{l+s+sd}{        x\PYGZus{}hist: list            \PYGZhy{}\PYGZgt{}  Lista con valores de x (posiciones)  obtenidos mediante }
\PYG{l+s+sd}{                                    cadena de Markov.}
\PYG{l+s+sd}{        grafica histograma y comparación con teoría si plot=True }
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{n}{N} \PYG{o}{=} \PYG{n+nb}{int}\PYG{p}{(}\PYG{n}{N}\PYG{p}{)}
    \PYG{c+c1}{\PYGZsh{} Corre el algoritmo metrópolis y mide tiempo de cómputo}
    \PYG{n}{t\PYGZus{}0} \PYG{o}{=} \PYG{n}{time}\PYG{p}{()}
    \PYG{n}{x\PYGZus{}hist} \PYG{o}{=} \PYG{n}{metropolis}\PYG{p}{(}\PYG{n}{N}\PYG{p}{,} \PYG{n}{x0}\PYG{p}{,} \PYG{n}{delta\PYGZus{}x}\PYG{p}{,} \PYG{n}{prob\PYGZus{}amplitude\PYGZus{}sampling}\PYG{p}{)}
    \PYG{n}{t\PYGZus{}1} \PYG{o}{=} \PYG{n}{time}\PYG{p}{()}
    \PYG{k}{print}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Metropolis algorithm QHO ground state: }\PYG{l+s+si}{\PYGZpc{}.3f}\PYG{l+s+s1}{ seconds for }\PYG{l+s+si}{\PYGZpc{}.0E}\PYG{l+s+s1}{ iterations\PYGZsq{}}\PYG{o}{\PYGZpc{}}\PYG{p}{(}\PYG{n}{t\PYGZus{}1}\PYG{o}{\PYGZhy{}}\PYG{n}{t\PYGZus{}0}\PYG{p}{,}\PYG{n}{N}\PYG{p}{))}
    \PYG{c+c1}{\PYGZsh{} Gráfica del histograma y comparación con densidad de probabilidad original}
    \PYG{k}{if} \PYG{n}{plot}\PYG{o}{==}\PYG{n+nb+bp}{True}\PYG{p}{:}
        \PYG{n}{x\PYGZus{}plot} \PYG{o}{=} \PYG{n}{np}\PYG{o}{.}\PYG{n}{linspace}\PYG{p}{(}\PYG{o}{\PYGZhy{}}\PYG{n}{xlim}\PYG{p}{,}\PYG{n}{xlim}\PYG{p}{,}\PYG{n}{N\PYGZus{}plot}\PYG{p}{)}
        \PYG{n}{plt}\PYG{o}{.}\PYG{n}{figure}\PYG{p}{(}\PYG{n}{figsize}\PYG{o}{=}\PYG{p}{(}\PYG{l+m+mi}{8}\PYG{p}{,}\PYG{l+m+mi}{5}\PYG{p}{))}
        \PYG{n}{plt}\PYG{o}{.}\PYG{n}{plot}\PYG{p}{(}\PYG{n}{x\PYGZus{}plot}\PYG{p}{,}\PYG{n}{prob\PYGZus{}amplitude\PYGZus{}sampling}\PYG{p}{(}\PYG{n}{x\PYGZus{}plot}\PYG{p}{)}\PYG{o}{**}\PYG{l+m+mi}{2}\PYG{p}{,}
                    \PYG{n}{label}\PYG{o}{=}\PYG{l+s+sa}{u}\PYG{l+s+s1}{\PYGZsq{}QHO densidad de probabilidad}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s+s1}{del estado base: \PYGZdl{}|\PYGZbs{}psi\PYGZus{}0(x)|\PYGZca{}2\PYGZdl{}\PYGZsq{}}\PYG{p}{)}
        \PYG{n}{plt}\PYG{o}{.}\PYG{n}{hist}\PYG{p}{(}\PYG{n}{x\PYGZus{}hist}\PYG{p}{,}\PYG{n}{bins}\PYG{o}{=}\PYG{n+nb}{int}\PYG{p}{(}\PYG{n}{N}\PYG{o}{**}\PYG{l+m+mf}{0.5}\PYG{p}{),}\PYG{n}{normed}\PYG{o}{=}\PYG{n+nb+bp}{True}\PYG{p}{,}
                    \PYG{n}{label}\PYG{o}{=}\PYG{l+s+sa}{u}\PYG{l+s+s1}{\PYGZsq{}Histograma Metrópolis}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s+s1}{con }\PYG{l+s+si}{\PYGZpc{}.0E}\PYG{l+s+s1}{ iteraciones\PYGZsq{}}\PYG{o}{\PYGZpc{}}\PYG{p}{(}\PYG{n}{N}\PYG{p}{))}
        \PYG{n}{plt}\PYG{o}{.}\PYG{n}{xlim}\PYG{p}{(}\PYG{o}{\PYGZhy{}}\PYG{n}{xlim}\PYG{p}{,}\PYG{n}{xlim}\PYG{p}{)}
        \PYG{n}{plt}\PYG{o}{.}\PYG{n}{xlabel}\PYG{p}{(}\PYG{l+s+sa}{u}\PYG{l+s+s1}{\PYGZsq{}\PYGZdl{}x\PYGZdl{}\PYGZsq{}}\PYG{p}{)}
        \PYG{n}{plt}\PYG{o}{.}\PYG{n}{ylabel}\PYG{p}{(}\PYG{l+s+sa}{u}\PYG{l+s+s1}{\PYGZsq{}\PYGZdl{}|\PYGZbs{}psi\PYGZus{}0(x)|\PYGZca{}2\PYGZdl{}\PYGZsq{}}\PYG{p}{)}
        \PYG{n}{plt}\PYG{o}{.}\PYG{n}{legend}\PYG{p}{(}\PYG{n}{loc}\PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}lower right\PYGZsq{}}\PYG{p}{)}
        \PYG{k}{if} \PYG{n}{savefig}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{o}{==}\PYG{n+nb+bp}{True}\PYG{p}{:}
            \PYG{n}{plt}\PYG{o}{.}\PYG{n}{savefig}\PYG{p}{(}\PYG{n}{savefig}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{])}
        \PYG{k}{if} \PYG{n}{showplot}\PYG{o}{==}\PYG{n+nb+bp}{True}\PYG{p}{:}
            \PYG{n}{plt}\PYG{o}{.}\PYG{n}{show}\PYG{p}{()}
        \PYG{n}{plt}\PYG{o}{.}\PYG{n}{close}\PYG{p}{()}

    \PYG{k}{return} \PYG{n}{x\PYGZus{}hist}

\PYG{c+c1}{\PYGZsh{} Corremos el código usando función run\PYGZus{}metropolis(), ésta graficará y guardará el histograma}
\PYG{n}{plt}\PYG{o}{.}\PYG{n}{rcParams}\PYG{o}{.}\PYG{n}{update}\PYG{p}{(\PYGZob{}}\PYG{l+s+s1}{\PYGZsq{}font.size\PYGZsq{}}\PYG{p}{:}\PYG{l+m+mi}{15}\PYG{p}{\PYGZcb{})}
\PYG{n}{x\PYGZus{}hist} \PYG{o}{=} \PYG{n}{run\PYGZus{}metropolis}\PYG{p}{(}\PYG{n}{N}\PYG{o}{=}\PYG{l+m+mf}{1e6}\PYG{p}{)}
\end{Verbatim}
